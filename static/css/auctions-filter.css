#filter-panel .card .card-filters {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
}

#filter-panel .card {
    min-height: max-content;
    width: 100%;
}

.card-group-item {
    padding: 1rem;
}

.card-header {
    margin-bottom: .5rem;
}

.float-right {
    margin-right: .2rem;
}

/* Search bar */
.search button {
    border: none;
    background: none;
    color: #8b8ba7;
}
/* styling of whole input container */
.search {
    --timing: 0.3s;
    --width-of-input: 100%;
    --height-of-input: 40px;
    --border-height: 2px;
    --input-bg: #fff;
    --border-color: #000;
    --border-radius: 30px;
    --after-border-radius: 1px;
    position: relative;
    width: var(--width-of-input);
    height: var(--height-of-input);
    display: flex;
    align-items: center;
    padding-inline: 0.8em;
    border-radius: var(--border-radius);
    transition: border-radius 0.5s ease;
    background: var(--input-bg,#fff);
}
/* styling of Input */
.search-input {
    font-size: 0.9rem;
    background-color: transparent;
    width: 100%;
    height: 100%;
    padding-inline: 0.5em;
    padding-block: 0.7em;
    border: none;
}
/* styling of animated border */
.search:before {
    content: "";
    position: absolute;
    background: var(--border-color);
    transform: scaleX(0);
    transform-origin: center;
    width: 100%;
    height: var(--border-height);
    left: 0;
    bottom: 0;
    border-radius: 1px;
    transition: transform var(--timing) ease;
}
/* Hover on Input */
.search:focus-within {
    border-radius: var(--after-border-radius);
}

.search-input:focus {
    outline: none;
}
/* here is code of animated border */
.search:focus-within:before {
    transform: scale(1);
}
/* styling of close button */
/* == you can click the close button to remove text == */
.reset {
    border: none;
    background: none;
    opacity: 0;
    visibility: hidden;
}
/* close button shown when typing */
.search-input:not(:placeholder-shown) ~ .reset {
    opacity: 1;
    visibility: visible;
}
/* sizing svg icons */
.search svg {
    width: 17px;
    margin-top: 3px;
}
/* end of search bar */

/* range input */
.range-input {
    padding: .25rem .75rem;
    display: block;
}
/* end of range input */

/* checkbox */
.badge-checkbox {
    display: flex;
    align-items: center;
}

.cl-checkbox {
    position: relative;
    display: inline-block;
   }
   
   /* Input */
   .cl-checkbox > input {
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
    z-index: -1;
    position: absolute;
    left: -10px;
    top: -8px;
    display: block;
    margin: 0;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    background-color: rgba(0, 0, 0, 0.6);
    box-shadow: none;
    outline: none;
    opacity: 0;
    transform: scale(1);
    pointer-events: none;
    transition: opacity 0.3s, transform 0.2s;
   }
   
   /* Span */
   .cl-checkbox > span {
    display: inline-block;
    width: 100%;
    cursor: pointer;
   }
   
   /* Box */
   .cl-checkbox > span::before {
    content: "";
    display: inline-block;
    box-sizing: border-box;
    margin: 3px 11px 3px 1px;
    border: solid 2px;
    /* Safari */
    border-color: rgba(0, 0, 0, 0.6);
    border-radius: 2px;
    width: 18px;
    height: 18px;
    vertical-align: top;
    transition: border-color 0.2s, background-color 0.2s;
   }
   
   /* Checkmark */
   .cl-checkbox > span::after {
    content: "";
    display: block;
    position: absolute;
    top: 3px;
    left: 1px;
    width: 10px;
    height: 5px;
    border: solid 2px transparent;
    border-right: none;
    border-top: none;
    transform: translate(3px, 4px) rotate(-45deg);
   }
   
   /* Checked, Indeterminate */
   .cl-checkbox > input:checked,
   .cl-checkbox > input:indeterminate {
    background-color: black;
   }
   
   .cl-checkbox > input:checked + span::before,
   .cl-checkbox > input:indeterminate + span::before {
    border-color: black;
    background-color: black;
   }
   
   .cl-checkbox > input:checked + span::after,
   .cl-checkbox > input:indeterminate + span::after {
    border-color: #fff;
   }
   
   .cl-checkbox > input:indeterminate + span::after {
    border-left: none;
    transform: translate(4px, 3px);
   }
   
   /* Hover, Focus */
   .cl-checkbox:hover > input {
    opacity: 0.04;
   }
   
   .cl-checkbox > input:focus {
    opacity: 0.12;
   }
   
   .cl-checkbox:hover > input:focus {
    opacity: 0.16;
   }
   
   /* Active */
   .cl-checkbox > input:active {
    opacity: 1;
    transform: scale(0);
    transition: transform 0s, opacity 0s;
   }
   
   .cl-checkbox > input:active + span::before {
    border-color: #85b8b7;
   }
   
   .cl-checkbox > input:checked:active + span::before {
    border-color: transparent;
    background-color: rgba(0, 0, 0, 0.6);
   }
   
   /* Disabled */
   .cl-checkbox > input:disabled {
    opacity: 0;
   }
   
   .cl-checkbox > input:disabled + span {
    color: rgba(0, 0, 0, 0.38);
    cursor: initial;
   }
   
   .cl-checkbox > input:disabled + span::before {
    border-color: currentColor;
   }
   
   .cl-checkbox > input:checked:disabled + span::before,
   .cl-checkbox > input:indeterminate:disabled + span::before {
    border-color: transparent;
    background-color: currentColor;
   }
   
/* end of checkbox */